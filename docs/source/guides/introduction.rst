Introdu√ß√£o
==========

`LLM4Time <https://github.com/zairobastos/LLM4Time>`_ √© uma biblioteca Python modular para previs√£o de s√©ries temporais utilizando modelos de linguagem (LLMs). Ela oferece uma arquitetura flex√≠vel que permite o tratamento de dados, gera√ß√£o de prompts, previs√£o de s√©ries temporais, avalia√ß√£o de m√©tricas e visualiza√ß√£o interativa.

Key Features
------------

O LLM4Time oferece uma ampla gama de recursos. Alguns de seus principais recursos incluem:

- `Pr√©-processamento e tratamento de dados </LLM4Time/modules/root.html>`_
- `Gera√ß√£o de prompts e formata√ß√µes </LLM4Time/modules/root.html#prompts-e-formatacoes>`_
- `Previs√£o com LLMs </LLM4Time/modules/root.html#previsao-com-llms>`_
- `M√©tricas de avalia√ß√£o </LLM4Time/modules/root.html#metricas-de-avaliacao>`_
- `Visualiza√ß√£o interativa </LLM4Time/modules/root.html#visualizacao>`_


Pr√©-processamento e tratamento de dados
=======================================

1. Carregamento dos dados
-------------------------

.. code-block:: python

  from llm4time.core.data import loader
  from llm4time.core.evaluate import Statistics

  # Carrega os dados CSV, XLSX, JSON ou Parquet
  df = loader.load_data("etth2.csv")

  # Estat√≠sticas descritivas
  stats = Statistics(df['OT'])
  print(f"M√©dia: {stats.mean}")
  print(f"Mediana: {stats.median}")
  print(f"1¬∞ Quartil: {stats.first_quartile}")
  print(f"3¬∞ Quartil: {stats.third_quartile}")
  print(f"Desvio padr√£o: {stats.std}")
  print(f"M√≠nimo: {stats.min}")
  print(f"M√°ximo: {stats.max}")
  print(f"Quantidade de dados ausentes: {stats.missing_count}")
  print(f"Percentual de dados ausentes: {stats.missing_percentage}")


2. Pr√©-processamento
--------------------

.. code-block:: python

  from llm4time.core.data import preprocessor

  # Padroniza para o formato de s√©rie temporal
  df = preprocessor.standardize(
    df,
    date_col='date',    # Nome da coluna que cont√©m as datas/timestamps
    value_col='OT',     # Nome da coluna que cont√©m os valores da s√©rie temporal
    duplicates='first'  # Como tratar linhas duplicadas: 'first' mant√©m a primeira ocorr√™ncia
  )

  # Garante que todas as datas/horas estejam presentes.
  df = preprocessor.normalize(df, freq='h')

3. Imputa√ß√£o de dados ausentes
------------------------------

.. code-block:: python

  from llm4time.core.data import imputation

  # Substitui os valores ausentes pela m√©dia da coluna 'value'.
  df = imputation.mean(df)

4. Divis√£o dos dados
--------------------

.. code-block:: python

  from llm4time.core.data import preprocessor

  # Divide o conjunto de dados em treinamento e valida√ß√£o
  train, y_val = preprocessor.split(
    df,
    start_date='2016-06-01 00:00:00', # In√≠cio do conjunto de treinamento
    end_date='2016-12-01 00:00:00',   # Fim do conjunto de treinamento
    periods=24                        # N√∫mero de per√≠odos para previs√£o
  )


Gera√ß√£o de prompts
==================

5. Gerando prompt zero-shot
---------------------------

.. code-block:: python

  from llm4time.core import prompt
  from llm4time.core import PromptType, TSFormat, TSType

  content = prompt.generate(
      train,       # Conjunto de treino [(date, value), ...]
      periods=24,  # N√∫mero de per√≠odos que queremos prever
      prompt_type=PromptType.ZERO_SHOT,  # Tipo de prompt: ZERO_SHOT (sem exemplos)
      ts_format=TSFormat.ARRAY,          # Formato da s√©rie temporal
      ts_type=TSType.NUMERIC             # Tipo de codifica√ß√£o dos valores da s√©rie
  )


Previs√£o com LLMs
=================

6. Instanciando um modelo OpenAI
--------------------------------

.. code-block:: python

  from llm4time.core.models import OpenAI

  model = OpenAI(
    model='gpt-4o',  # Nome do modelo OpenAI a ser utilizado.
    api_key='...',   # Chave de API para autentica√ß√£o no servi√ßo OpenAI.
    base_url='..'    # URL base do endpoint OpenAI.
  )

7. Gerando uma previs√£o
-----------------------

.. code-block:: python

  # Gera a previs√£o
  response, prompt_tokens, response_tokens, time_sec = model.predict(
      content,          # Prompt previamente gerado
      temperature=0.7,  # Grau de aleatoriedade da resposta
      max_tokens=1000   # N√∫mero m√°ximo de tokens na resposta
  )

  print("Resposta do modelo:", response)
  print("N√∫mero de tokens do prompt:", prompt_tokens)
  print("N√∫mero de tokens da resposta:", response_tokens)
  print("Tempo de execu√ß√£o (s):", time_sec)


Avalia√ß√£o de m√©tricas
=====================

8. M√©tricas de erro
-------------------

.. code-block:: python

  from llm4time.core import formatter
  from llm4time.core.metrics import evaluate

  # Converte a string da resposta em uma lista num√©rica.
  y_pred = formatter.parse(
    response,
    ts_format=TSFormat.ARRAY,
    ts_type=TSType.NUMERIC
  )

  metrics, val_stats, pred_stats = evaluate(y_val, y_pred)

  # M√©tricas de erro
  print(f"sMAPE: {metrics.smape}") # Erro percentual sim√©trico m√©dio
  print(f"MAE: {metrics.mae}")     # Erro absoluto m√©dio
  print(f"RMSE: {metrics.rmse}")   # Raiz do erro quadr√°tico m√©dio


Visualiza√ß√£o interativa
=======================

9. Gr√°ficos comparativos entre valores reais e previstos
--------------------------------------------------------

.. code-block:: python

  from llm4time.visualization import plots

  # Gera um gr√°fico comparativo entre valores reais e previstos.
  plots.plot_forecast("Compara√ß√£o entre valores reais e previstos", y_val, y_pred)

  # Gera um gr√°fico de barras comparando estat√≠sticas descritivas.
  plots.plot_forecast_statistics("Compara√ß√£o estat√≠stica", y_val, y_pred)


Refer√™ncias
===========

.. code-block:: latex

  @article{zairo2025prompt,
    title={Prompt-Driven Time Series Forecasting with Large Language Models},
    author={Zairo Bastos and Jo√£o David Freitas and Jos√© Wellington Franco and Carlos Caminha},
    journal={Proceedings of the 27th International Conference on Enterprise Information Systems - Volume 1: ICEIS},
    year ={2025},
  }


Licen√ßa
=======

Este projeto est√° licenciado sob a `MIT License <https://github.com/zairobastos/LLM4Time/blob/main/LICENSE>`_.


Contato
=======

Em caso de d√∫vidas, sugest√µes ou feedback:

- üìß E-mail: zairobastos@gmail.com
- üîó LinkedIn: `Zairo Bastos <https://www.linkedin.com/in/zairobastos/>`_
